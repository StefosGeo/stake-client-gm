{"remainingRequest":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/george/projects/gem-farm-chimps-v2/src/components/gem-bank/NFTCard.vue?vue&type=template&id=6e7b8447&scoped=true&ts=true","dependencies":[{"path":"/home/george/projects/gem-farm-chimps-v2/src/components/gem-bank/NFTCard.vue","mtime":1651784671825},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/cache-loader/dist/cjs.js","mtime":1648666880328},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/babel-loader/lib/index.js","mtime":1648666880284},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/ts-loader/index.js","mtime":1648666885109},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1648666889180},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/cache-loader/dist/cjs.js","mtime":1648666880328},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/index.js","mtime":1648666889180}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdgogICAgY2xhc3M9Im0tMSBjYXJkIGZsZXgganVzdGlmeS1jZW50ZXIgY2FyZC1wYXJlbnQtZGl2IgogICAgOmNsYXNzPSJ7ICdjYXJkLXNlbGVjdGVkJzogc2VsZWN0ZWQgfSIKICAgIEBjbGljaz0idG9nZ2xlU2VsZWN0IgogID4KICAgIDxpbWcgdi1pZj0ibmZ0LmV4dGVybmFsTWV0YWRhdGEuaW1hZ2UiCiAgICAgIDpzcmM9Im5mdC5leHRlcm5hbE1ldGFkYXRhLmltYWdlIgogICAgICA6YWx0PSJuZnQub25jaGFpbk1ldGFkYXRhLmRhdGEubmFtZSIvPgogICAgPGRpdiB2LWlmPSJwcmljZVBlcldlZWsgPiAwIiBjbGFzcz0iaG92ZXItdGV4dCI+e3twcmljZVBlcldlZWt9fSAkTFVYIFBlciBXZWVrPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/george/projects/gem-farm-chimps-v2/src/components/gem-bank/NFTCard.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB;IACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrF,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/george/projects/gem-farm-chimps-v2/src/components/gem-bank/NFTCard.vue","sourceRoot":"","sourcesContent":["<template>\n  <div\n    class=\"m-1 card flex justify-center card-parent-div\"\n    :class=\"{ 'card-selected': selected }\"\n    @click=\"toggleSelect\"\n  >\n    <img v-if=\"nft.externalMetadata.image\"\n      :src=\"nft.externalMetadata.image\"\n      :alt=\"nft.onchainMetadata.data.name\"/>\n    <div v-if=\"pricePerWeek > 0\" class=\"hover-text\">{{pricePerWeek}} $LUX Per Week</div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nexport default defineComponent({\n  props: {\n    nft: { type: Object, required: true },\n  },\n  emits: ['selected'],\n  onMounted()\n  {\n    this.SetPricePerWeek();\n  },\n  setup(props, ctx) {\n    const selected = ref<boolean>(false);\n    const pricePerWeek = ref<String>();\n    pricePerWeek.value = \"200\";\n    const SetPricePerWeek = () =>\n    {      \n      var baseRate = 5;\n      try{\n      var lux_type = props.nft.externalMetadata.attributes[0].value.toString() || 5;\n      }catch(err)\n      {}\n      \n      switch(lux_type)\n      {\n        case 'Apartment':\n          baseRate = 5;\n          break;\n         case 'Duplex':\n          baseRate = 6;\n          break;\n         case 'Condo':\n          baseRate = 7;\n          break;\n           case 'Penthouse':\n          baseRate = 8;\n          break;\n           case 'Mansion':\n          baseRate = 10;\n          break;\n\n        default:\n          baseRate = 5;\n          break;\n      }\n     pricePerWeek.value = (baseRate * 200).toString();\n    }\n    SetPricePerWeek();\n    const toggleSelect = () => {           \n      selected.value = !selected.value;\n      console.log('selected', props.nft.mint.toBase58());\n      ctx.emit('selected', {\n        nft: props.nft,\n        selected: selected.value,\n      });\n    };\n\n    return {\n      selected,\n      toggleSelect,\n      SetPricePerWeek,\n      pricePerWeek,\n    };\n  },\n});\n</script>\n\n<style scoped>\nimg {\n  max-width: 100%;\n  max-height: 100%;\n  height: auto;\n  width: auto;\n  border-radius:5px;\n}\n\nimg:hover {\n  max-width: 100%;\n  max-height: 100%;\n  height: auto;\n  width: auto;\n  border-radius:5px;\n}\n\n.card {\n  width: 150px;\n  height: 150px;\n}\n\n.card:hover {\n  @apply border-4 border-solid border-gray-200;\n  border-radius:10px;\n}\n\n.card-selected {\n  @apply border-4 border-solid;\n  border-color: #47d34b  !important;\n  border-radius:10px;\n}\n.card-parent-div{\n position: relative;\n float: left;\n}\n.hover-text{\n position: absolute;\n bottom: 0;\n right: 0;\n width:100%;\n background: black;\n color: white;\n margin: auto;\n opacity: 0;\n visibility: visible;\n -webkit-transition: visibility 0s, opacity 0.5s linear; \n /* transition: visibility 0s, opacity 0.5s linear; */\n}\n.hover-text:hover{\n visibility: visible;\n opacity: 0.7; \n}\n</style>\n"]}]}