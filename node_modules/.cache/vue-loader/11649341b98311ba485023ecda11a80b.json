{"remainingRequest":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/george/projects/gem-farm-chimps-v2/src/views/Home.vue?vue&type=template&id=fae5bece&ts=true","dependencies":[{"path":"/home/george/projects/gem-farm-chimps-v2/src/views/Home.vue","mtime":1651784817312},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/cache-loader/dist/cjs.js","mtime":1648666880328},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/babel-loader/lib/index.js","mtime":1648666880284},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/ts-loader/index.js","mtime":1648666885109},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1648666889180},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/cache-loader/dist/cjs.js","mtime":1648666880328},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/vue-loader-v16/dist/index.js","mtime":1648666889180}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0icHQtMTAgcHgtMTAgZmxleCBqdXN0aWZ5LWNlbnRlciBhbGlnbi1taWRkbGUiPgogICAgICA8aW1nIHNyYz0iLi4vYXNzZXRzL2dtLWxvZ28ucG5nIiBzdHlsZT0id2lkdGg6IDE1JTsiLz48YnIvPgogIDwvZGl2PgogIDxDb25maWdQYW5lIDpmYXJtZXJBY2M9ImZhcm1lckFjYyIgLz4KICA8ZGl2IHYtaWY9IiF3YWxsZXQiIGNsYXNzPSJ0ZXh0LWNlbnRlciI+PC9kaXY+CiAgPGRpdiB2LWVsc2U+CiAgICA8ZGl2IHYtaWY9ImZhcm1lckFjYyI+ICAKICAgICAgICA8TW9kYWwgCiAgICAgICAgICBAY2xvc2U9InRvZ2dsZU1vZGFsIiAKICAgICAgICAgIDptb2RhbEFjdGl2ZT0ibW9kYWxBY3RpdmUiIAogICAgICAgICAgOm1vZGFsQmFkPSJtb2RhbEJhZCIgCiAgICAgICAgICA6bW9kYWxHb29kPSJtb2RhbEdvb2QiCiAgICAgICAgICA6bW9kYWxOZXV0cmFsPSJtb2RhbE5ldXRyYWwiCiAgICAgICAgICA6bW9kYWxTaG93Q2xvc2U9Im1vZGFsU2hvd0Nsb3NlYnV0dG9uIj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWRlciI+CiAgICAgICAgICAgPGgxPnt7TW9kYWxIZWFkZXJ9fTwvaDE+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLXNwaW5uZXIiPgogICAgICAgICAgICA8c3ZnIHYtc2hvdz0ibW9kYWxTaG93V2hlZWwiIGNsYXNzPSJzcGlubmVyIiB3aWR0aD0iNjVweCIgaGVpZ2h0PSI2NXB4IiB2aWV3Qm94PSIwIDAgNjYgNjYiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgPGNpcmNsZSB2LXNob3c9Im1vZGFsU2hvd1doZWVsIiBjbGFzcz0icGF0aCIgZmlsbD0ibm9uZSIgc3Ryb2tlLXdpZHRoPSI2IiBzdHJva2UtbGluZWNhcD0icm91bmQiIGN4PSIzMyIgY3k9IjMzIiByPSIzMCI+PC9jaXJjbGU+CiAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC10ZXh0Ij4KICAgICAgICAgICAgPHA+e3tNb2RhbE1lc3NhZ2V9fTwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L01vZGFsPiAgIAogICAgICA8VmF1bHQKICAgICAgICA6a2V5PSJmYXJtZXJBY2MiCiAgICAgICAgY2xhc3M9Im1iLTEwIgogICAgICAgIDp2YXVsdD0iZmFybWVyQWNjLnZhdWx0LnRvQmFzZTU4KCkiCiAgICAgICAgOmZhcm1lckFjYz0iZmFybWVyQWNjIgogICAgICAgIEBzZWxlY3RlZC13YWxsZXQtbmZ0PSJoYW5kbGVOZXdTZWxlY3RlZE5GVCIKICAgICAgICBAc2VsZWN0ZWQtdmF1bHQtbmZ0PSJoYW5kbGVOZXdTZWxlY3RlZFZhdWx0TkZUIgogICAgICAgIHJlZj0gJ1ZhdWx0UmVmJwogICAgICA+CiAgICAgICAgPGRpdiBjbGFzcz0ibGVmdC1idXR0b25zIj4KICAgICAgICA8IS0tIDxidXR0b24KICAgICAgICAgIHYtaWY9ImZhcm1lclN0YXRlID09PSAnc3Rha2VkJyAmJiBzZWxlY3RlZE5GVHMubGVuZ3RoID4gMCIKICAgICAgICAgIGNsYXNzPSJuZXMtYnRuIGh1VmppVSBpcy1wcmltYXJ5IHV4YnV0dG9ubGVmdCIKICAgICAgICAgIEBjbGljaz0iYWRkR2VtcyIKICAgICAgICA+CiAgICAgICAgICBBZGQgTkZUcyAocmVzZXRzIGxvY2sgdGltZXIpCiAgICAgICAgPC9idXR0b24+IC0tPgogICAgICAgIDxidXR0b24KICAgICAgICAgIHYtaWY9ImZhcm1lclN0YXRlID09PSAndW5zdGFrZWQnICYmICF3aWR0aGRyYXdORlRzIgogICAgICAgICAgY2xhc3M9ImVuYWJsZWQtYnV0dG9uIG5lcy1idG4gaHVWamlVIGlzLXN1Y2Nlc3MgdXhidXR0b25sZWZ0IgogICAgICAgICAgQGNsaWNrPSJiZWdpblN0YWtpbmciCiAgICAgICAgPgogICAgICAgICAgU3RhcnQgU3Rha2luZwogICAgICAgIDwvYnV0dG9uPgogICAgICAgIDxidXR0b24KICAgICAgICAgIHYtaWY9ImZhcm1lclN0YXRlID09PSAndW5zdGFrZWQnICAmJiB3aWR0aGRyYXdORlRzIiAKICAgICAgICAgIGNsYXNzPSJlbmFibGVkLWJ1dHRvbiBuZXMtYnRuIGh1VmppVSBpcy1zdWNjZXNzIHV4YnV0dG9ubGVmdCIKICAgICAgICAgIEBjbGljaz0iYmVnaW5TdGFraW5nIgogICAgICAgID4KICAgICAgICAgIFdpdGhkcmF3IE5GVHMKICAgICAgICA8L2J1dHRvbj4KICAgICAgICAKICAgICAgICA8YnV0dG9uCiAgICAgICAgICB2LWlmPSJmYXJtZXJTdGF0ZSA9PT0gJ3N0YWtlZCciCiAgICAgICAgICBjbGFzcz0iZW5hYmxlZC1idXR0b24gbmVzLWJ0biBodVZqaVUgaXMtZXJyb3IgdXhidXR0b25sZWZ0IgogICAgICAgICAgQGNsaWNrPSJlbmRTdGFraW5nKHRydWUpIgogICAgICAgID4KICAgICAgICAgIFN0b3AgU3Rha2luZwogICAgICAgIDwvYnV0dG9uPgogICAgICAgIDxidXR0b24KICAgICAgICAgIHYtaWY9ImZhcm1lclN0YXRlID09PSAncGVuZGluZ0Nvb2xkb3duJyIKICAgICAgICAgIGNsYXNzPSJlbmFibGVkLWJ1dHRvbiBuZXMtYnRuIGh1VmppVSBpcy1lcnJvciB1eGJ1dHRvbmxlZnQiCiAgICAgICAgICBAY2xpY2s9ImVuZFN0YWtpbmcodHJ1ZSkiCiAgICAgICAgPgogICAgICAgICAgU3RvcCBTdGFraW5nCiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGRpdiBjbGFzcz0iIiAgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTtmb250U2l6ZTp4LXNtYWxsIj4KICAgICAgICAgIDxwIGNsYXNzPSJtci0xMCI+KlN0b3AgU3Rha2luZyB0byBBZGQgbW9yZSBORlQnczwvcD4gCiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJyaWdodC1idXR0b25zIj4KICAgICAgICA8YnV0dG9uCiAgICAgICAgICB2LWlmPSJhdmFpbGFibGVBID4gMCIKICAgICAgICAgIGNsYXNzPSJlbmFibGVkLWJ1dHRvbiBuZXMtYnRuIGh1VmppVSB1eGJ1dHRvbnJpZ2h0IgogICAgICAgICAgQGNsaWNrPSJjbGFpbSIKICAgICAgICA+CiAgICAgICAgQ2xhaW0ge3sgTWF0aC5mbG9vcihhdmFpbGFibGVBIC8gMTAwMDAwMDAwMCkgfX0gJExVWCAKICAgICAgICA8L2J1dHRvbj4gICAgICAgIAogICAgICAgIDxidXR0b24KICAgICAgICAgIHYtaWY9ImF2YWlsYWJsZUEgPT0gMCIKICAgICAgICAgIGNsYXNzPSJkaXNhYmxlZC1idXR0b24gbmVzLWJ0biBodVZqaVUgdXhidXR0b25yaWdodCIKICAgICAgICA+CiAgICAgICAgICBXaXRoZHJhdyB7eyBNYXRoLmZsb29yKGF2YWlsYWJsZUEgLyAxMDAwMDAwMDAwKSB9fSAkTFVYCiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0id2lkdGgxMDAgZmxleCBqdXN0aWZ5LWNlbnRlciBodVZqaVUgcHQtNSI+ICAgICAgICAgIAogICAgICAgICAgPGRpdiB2LWlmPSJmaXhlZFJhdGUgPiAwIiBjbGFzcz0iYWNjcnVlZC1yZXdhcmQgdXhidXR0b25sZWZ0IGxlZnQtYnV0dG9ucyIgPiBFc3RpbWF0ZWQgUmV3YXJkczoge3sgZXN0UmV3YXJkcyAgfX0gJExVWDwvZGl2PgogICAgICAgICAgPCEtLSA8ZGl2IHYtaWY9InBhaWRPdXRSZXdhcmQiIGNsYXNzPSJ0b3RhbC1lYXJuZWQtcmV3YXJkIiA+IHBhaWRPdXRSZXdhcmQ6IHt7cGFpZE91dFJld2FyZH19PC9kaXY+IC0tPgogICAgICAgICAgPGRpdiB2LWlmPSJmaXhlZFJhdGUgPiAwIiBjbGFzcz0iY3VycmVudGx5LWVhcm5pbmcgdXhidXR0b25yaWdodCByaWdodC1idXR0b25zIiA+IEN1cnJlbnRseSBnZW5lcmF0aW5nOiB7e2ZpeGVkUmF0ZSAvIDEwMDAwMDAwMDB9fSAkTFVYIHBlciBXZWVrPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0id2lkdGgxMDAgZmxleCBqdXN0aWZ5LWNlbnRlciBodVZqaVUgcHQtNSI+ICAgICAgICAgIAogICAgICAgICAgPGRpdiB2LWlmPSJmaXhlZFJhdGUgPiAwIiBjbGFzcz0iYWNjcnVlZC1yZXdhcmQgdXhidXR0b25sZWZ0IGxlZnQtYnV0dG9ucyIgPlRvdGFsIE5GVHMgU3Rha2VkOiB7e3RvdGFsTkZUc1N0YWtlZH19IC8ge3sgTWF0aC5mbG9vcih0b3RhbE5GVHNTdGFrZWQgLyB0b3RhbE5GVHMgKiAxMDApIH19JSA8L2Rpdj4gCiAgICAgICAgICA8IS0tIDxkaXYgdi1pZj0icGFpZE91dFJld2FyZCIgY2xhc3M9InRvdGFsLWVhcm5lZC1yZXdhcmQiID4gcGFpZE91dFJld2FyZDoge3twYWlkT3V0UmV3YXJkfX08L2Rpdj4gLS0+CiAgICAgICAgICA8ZGl2IHYtaWY9ImZpeGVkUmF0ZSA+IDAiIGNsYXNzPSJjdXJyZW50bHktZWFybmluZyB1eGJ1dHRvbnJpZ2h0IHJpZ2h0LWJ1dHRvbnMiID4gU3Rha2luZyBTdGF0dXM6IHt7ZmFybWVyU3RhdGV9fTwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIAo8IS0tICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibmVzLWJ0biBodVZqaVUgbXItNSIgQGNsaWNrPSJoYW5kbGVSZWZyZXNoRmFybWVyIj4KICAgICAgICAgIEZvcmNlIFJlZnJlc2ggVmF1bHQKICAgICAgICA8L2J1dHRvbj4gLS0+CiAgICAgICAgPCEtLSA8ZGl2IHYtaWY9IiEhYWNjcnVlZFJld2FyZCIgY2xhc3M9InctZnVsbCB0ZXh0LWNlbnRlciBtYi01Ij4KICAgICAgICAgIEFjY3J1ZWQgJERBQjoge3thY2NydWVkUmV3YXJkfX0gUGFpZCBvdXQgJERBQjoge3twYWlkT3V0UmV3YXJkfX0KICAgICAgICA8L2Rpdj4gLS0+CiAgICAgIDwvVmF1bHQ+CiAgICA8L2Rpdj4KICAgIDxkaXYgdi1lbHNlPgogICAgICA8ZGl2IGNsYXNzPSJ3LWZ1bGwgdGV4dC1jZW50ZXIgbWItNSI+CiAgICAgICAgU3Rha2luZyBhY2NvdW50IG5vdCBmb3VuZC4gQ2xpY2sgaGVyZSB0byBjcmVhdGUgYSBuZXcgb25lLgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0idy1mdWxsIHRleHQtY2VudGVyIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJuZXMtYnRuIGh1VmppVSBuZXctc3Rha2luZy1hY2NvdW50IiBAY2xpY2s9ImluaXRGYXJtZXIiPgogICAgICAgICAgTmV3IHN0YWtpbmcgYWNjb3VudAogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/george/projects/gem-farm-chimps-v2/src/views/Home.vue"],"names":[],"mappings":"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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B;UACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B;UACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACxD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnD,CAAC,CAAC,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf;QACA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;UACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD;UACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,CAAC,CAAC;;QAEL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACntvJ,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;UACntxH,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEb,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACnE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpjE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;MACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC3D,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACV,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/george/projects/gem-farm-chimps-v2/src/views/Home.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"pt-10 px-10 flex justify-center align-middle\">\n      <img src=\"../assets/gm-logo.png\" style=\"width: 15%;\"/><br/>\n  </div>\n  <ConfigPane :farmerAcc=\"farmerAcc\" />\n  <div v-if=\"!wallet\" class=\"text-center\"></div>\n  <div v-else>\n    <div v-if=\"farmerAcc\">  \n        <Modal \n          @close=\"toggleModal\" \n          :modalActive=\"modalActive\" \n          :modalBad=\"modalBad\" \n          :modalGood=\"modalGood\"\n          :modalNeutral=\"modalNeutral\"\n          :modalShowClose=\"modalShowClosebutton\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n           <h1>{{ModalHeader}}</h1>\n          </div>\n          <div class=\"modal-spinner\">\n            <svg v-show=\"modalShowWheel\" class=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle v-show=\"modalShowWheel\" class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n            </svg>\n          </div>\n          <div class=\"modal-text\">\n            <p>{{ModalMessage}}</p>\n          </div>\n        </div>\n      </Modal>   \n      <Vault\n        :key=\"farmerAcc\"\n        class=\"mb-10\"\n        :vault=\"farmerAcc.vault.toBase58()\"\n        :farmerAcc=\"farmerAcc\"\n        @selected-wallet-nft=\"handleNewSelectedNFT\"\n        @selected-vault-nft=\"handleNewSelectedVaultNFT\"\n        ref= 'VaultRef'\n      >\n        <div class=\"left-buttons\">\n        <!-- <button\n          v-if=\"farmerState === 'staked' && selectedNFTs.length > 0\"\n          class=\"nes-btn huVjiU is-primary uxbuttonleft\"\n          @click=\"addGems\"\n        >\n          Add NFTs (resets lock timer)\n        </button> -->\n        <button\n          v-if=\"farmerState === 'unstaked' && !widthdrawNFTs\"\n          class=\"enabled-button nes-btn huVjiU is-success uxbuttonleft\"\n          @click=\"beginStaking\"\n        >\n          Start Staking\n        </button>\n        <button\n          v-if=\"farmerState === 'unstaked'  && widthdrawNFTs\" \n          class=\"enabled-button nes-btn huVjiU is-success uxbuttonleft\"\n          @click=\"beginStaking\"\n        >\n          Withdraw NFTs\n        </button>\n        \n        <button\n          v-if=\"farmerState === 'staked'\"\n          class=\"enabled-button nes-btn huVjiU is-error uxbuttonleft\"\n          @click=\"endStaking(true)\"\n        >\n          Stop Staking\n        </button>\n        <button\n          v-if=\"farmerState === 'pendingCooldown'\"\n          class=\"enabled-button nes-btn huVjiU is-error uxbuttonleft\"\n          @click=\"endStaking(true)\"\n        >\n          Stop Staking\n        </button>\n        <div class=\"\"  style=\"position: relative;fontSize:x-small\">\n          <p class=\"mr-10\">*Stop Staking to Add more NFT's</p> \n          </div>\n        </div>\n        <div class=\"right-buttons\">\n        <button\n          v-if=\"availableA > 0\"\n          class=\"enabled-button nes-btn huVjiU uxbuttonright\"\n          @click=\"claim\"\n        >\n        Claim {{ Math.floor(availableA / 1000000000) }} $LUX \n        </button>        \n        <button\n          v-if=\"availableA == 0\"\n          class=\"disabled-button nes-btn huVjiU uxbuttonright\"\n        >\n          Withdraw {{ Math.floor(availableA / 1000000000) }} $LUX\n        </button>\n        </div>\n        \n        <div class=\"width100 flex justify-center huVjiU pt-5\">          \n          <div v-if=\"fixedRate > 0\" class=\"accrued-reward uxbuttonleft left-buttons\" > Estimated Rewards: {{ estRewards  }} $LUX</div>\n          <!-- <div v-if=\"paidOutReward\" class=\"total-earned-reward\" > paidOutReward: {{paidOutReward}}</div> -->\n          <div v-if=\"fixedRate > 0\" class=\"currently-earning uxbuttonright right-buttons\" > Currently generating: {{fixedRate / 1000000000}} $LUX per Week</div>\n        </div>\n        <div class=\"width100 flex justify-center huVjiU pt-5\">          \n          <div v-if=\"fixedRate > 0\" class=\"accrued-reward uxbuttonleft left-buttons\" >Total NFTs Staked: {{totalNFTsStaked}} / {{ Math.floor(totalNFTsStaked / totalNFTs * 100) }}% </div> \n          <!-- <div v-if=\"paidOutReward\" class=\"total-earned-reward\" > paidOutReward: {{paidOutReward}}</div> -->\n          <div v-if=\"fixedRate > 0\" class=\"currently-earning uxbuttonright right-buttons\" > Staking Status: {{farmerState}}</div>\n        </div>\n        \n<!--         <button class=\"nes-btn huVjiU mr-5\" @click=\"handleRefreshFarmer\">\n          Force Refresh Vault\n        </button> -->\n        <!-- <div v-if=\"!!accruedReward\" class=\"w-full text-center mb-5\">\n          Accrued $DAB: {{accruedReward}} Paid out $DAB: {{paidOutReward}}\n        </div> -->\n      </Vault>\n    </div>\n    <div v-else>\n      <div class=\"w-full text-center mb-5\">\n        Staking account not found. Click here to create a new one.\n      </div>\n      <div class=\"w-full text-center\">\n        <button class=\"nes-btn huVjiU new-staking-account\" @click=\"initFarmer\">\n          New staking account\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick, onMounted, ref, watch } from 'vue';\nimport useWallet from '@/composables/wallet';\nimport useCluster, { BankAddr } from '@/composables/cluster';\nimport { initGemFarm } from '@/common/gem-farm';\nimport { PublicKey } from '@solana/web3.js';\nimport ConfigPane from '@/components/ConfigPane.vue';\nimport FarmerDisplay from '@/components/gem-farm/FarmerDisplay.vue';\nimport Vault from '@/components/gem-bank/Vault.vue';\nimport { INFT } from '@/common/web3/NFTget';\nimport { findFarmerPDA, stringifyPKsAndBNs } from '@gemworks/gem-farm-ts';\nimport Modal from \"@/components/Modal.vue\";\n\nexport default defineComponent({\n  components: { Vault, FarmerDisplay, ConfigPane, Modal},\n  setup(props, ctx) {\n    const { wallet, getWallet } = useWallet();\n    const { cluster, getConnection } = useCluster();\n    const widthdrawNFTs = ref(false);\n    const modalActive = ref(false);\n    const modalGood = ref(false);\n    const modalBad = ref(false);\n    const modalNeutral = ref(false);\n    const modalShowWheel = ref(false);\n    const modalShowClosebutton = ref(false);\n\n    const toggleModal = () => {\n      modalActive.value = !modalActive.value;\n    };\n\n    const showModal = () => {\n      modalActive.value = true;\n    };\n\n    const hideModal = () => {\n      modalActive.value = false;\n    };\n\n    const setModalContent = (header:string, content:string, style:string, showClose:boolean, showWheel:boolean) => {\n        modalGood.value = false;\n        modalBad.value = false;\n        modalNeutral.value = false;\n\n        ModalHeader.value = header;\n        ModalMessage.value = content; \n\n        modalShowClosebutton.value = showClose;\n        modalShowWheel.value = showWheel;\n\n        if(style == 'modal-good')\n                modalGood.value = true\n        if(style == 'modal-bad')\n                modalBad.value = true\n        if(style == 'modal-neutral')\n                modalNeutral.value = true\n\n\n    };\n\n    let gf: any;\n    watch([wallet, cluster], async () => {\n      await freshStart();\n    });\n\n    //needed in case we switch in from another window\n    onMounted(async () => {\n      await freshStart();\n    });\n\n    // --------------------------------------- farmer details\n    const farm = ref<string>();\n    const farmAcc = ref<any>();\n    const ModalMessage  = ref<string>();    \n    const ModalHeader  = ref<string>();  \n    const accruedReward  = ref<string>();\n    const paidOutReward = ref<string>();    \n    const fixedRate = ref<number>();    \n    const estFixedRate = ref<number>();\n    const estRewards = ref<number>();\n\n    const farmerIdentity = ref<string>();\n    const farmerAcc = ref<any>();\n    const farmerState = ref<string>();\n\n    const availableA = ref<string>();\n    const accruedA = ref<string>();\n    const availableB = ref<string>();\n\n    const VaultRef = ref<any>(null);\n\n    const totalAccounts = ref<number>();\n    const totalStakedAccounts = ref<number>();    \n    const totalNFTsStaked = ref<number>();    \n    const totalNFTs = ref<number>();    \n    const farmerbeginStakingTs = ref<string>();\n\n    //auto loading for when farm changes\n    watch(farm, async () => {\n      await freshStart();\n    });\n\n    const updateAvailableRewards = async () => {\n      accruedReward.value = farmerAcc.value.rewardA.accruedReward.toString();\n      paidOutReward.value = farmerAcc.value.rewardA.paidOutReward.toString();     \n      fixedRate.value = (farmerAcc.value.rewardA.fixedRate.promisedSchedule.baseRate * farmerAcc.value.rarityPointsStaked.words[0]);\n      estFixedRate.value = Math.floor((Date.now()/1000 - farmerAcc.value.minStakingEndsTs) * (fixedRate.value / 1000000000)/604799);\n      estRewards.value = Math.floor(((Date.now()/1000) - farmerAcc.value.rewardA.fixedRate.lastUpdatedTs) * (fixedRate.value / 1000000000 / 7 / 24 / 60 / 60))\n      availableA.value = farmerAcc.value.rewardA.accruedReward\n        .sub(farmerAcc.value.rewardA.paidOutReward)\n        .toString();\n      availableB.value = farmerAcc.value.rewardB.accruedReward\n        .sub(farmerAcc.value.rewardB.paidOutReward)\n        .toString();   \n     \n      totalNFTs.value = 10000;\n      farmerbeginStakingTs.value = farmerAcc.value.rewardA.fixedRate.beginStakingTs\n      \n    };\n\n    const fetchFarn = async () => {   \n      farmAcc.value = await gf.fetchFarmAcc(new PublicKey(farm.value!));  \n        totalAccounts.value = farmAcc.value.farmerCount;\n        totalStakedAccounts.value = farmAcc.value.stakedFarmerCount\n        totalNFTsStaked.value = farmAcc.value.gemsStaked      \n    };\n\n    const fetchFarmer = async () => {\n      const [farmerPDA] = await findFarmerPDA(\n        new PublicKey(farm.value!),\n        getWallet()!.publicKey!\n      );\n      farmerIdentity.value = getWallet()!.publicKey?.toBase58();\n      farmerAcc.value = await gf.fetchFarmerAcc(farmerPDA);\n      farmerState.value = gf.parseFarmerState(farmerAcc.value);\n      await updateAvailableRewards();\n      console.log(\n        `farmer found at ${farmerIdentity.value}:`,\n        stringifyPKsAndBNs(farmerAcc.value)\n      );\n    };\n\n    const freshStart = async () => {\n       setModalContent(\"Welcome to Lux Metaverse Staking\", \"We are actively updating this interface/staking solution. But please note before staking to make sure all your NFT's are in the Target Vault before staking. The act of clicking 'Start Staking' will lock this NFT for 7 days in this vault you will not be able to unstake during this time.\", \"modal-neutral\", true, false);     \n         showModal();\n      if (getWallet() && getConnection()) {\n        gf = await initGemFarm(getConnection(), getWallet()!);\n        farmerIdentity.value = getWallet()!.publicKey?.toBase58();\n        farm.value = BankAddr.LUX;\n\n        //reset stuff\n        farmAcc.value = undefined;\n        farmerAcc.value = undefined;\n        farmerState.value = undefined;\n        availableA.value = undefined;\n        availableB.value = undefined;\n        widthdrawNFTs.value = false;\n\n        try {          \n          await fetchFarn();\n          await fetchFarmer();\n           setInterval(function () {\n              fetchFarn();\n              fetchFarmer();\n          }, 600000);\n        } catch (e) {\n          console.log(`farm with PK ${farm.value} not found :(`);\n        }\n      }\n    };\n\n    const initFarmer = async () => {      \n          try\n          {           \n            setModalContent(\"Submitting Transaction\", \"Creating new staking account: Transaction in Progress\", \"modal-neutral\", false, true);    \n             showModal();\n              await gf.initFarmerWallet(new PublicKey(farm.value!));  \n              await fetchFarmer();\n          }\n          catch(ex: unknown)\n          {      \n             let message = 'Unknown Error: Please try again. If the problem continues, please reach out to the site admin'\n              if (ex instanceof Error) {\n                hideModal();\n                message = ex.message;\n                if(message.includes(\"0x1770\"))\n                {\n                message = \"Transaction Failed: Compute limit(200000) reached. \";\n                }\n                if(message.includes(\"0x1\"))\n                {\n                message = \"Please make sure you have at least .05 Sol in your account to cover rental and transaction fees\";\n                }\n                if(message.includes(\"0x1784\"))\n                {\n                message = \"Vault is Locked. Please try again after the minimum staking peroid has completed \";\n                }\n                \n                showModal();\n                setModalContent(\"There was a problem\", message , \"modal-bad\", true, false);\n                }\n          }          \n    };\n\n    // --------------------------------------- staking\n    const beginStaking = async () => {\n\n      try\n      {\n        showModal();\n        setModalContent(\"Submitting Transaction\", \"Transaction in Progress\", \"modal-neutral\", false, true);     \n          if((VaultRef.value.desiredVaultNFTs.length >= VaultRef.value.currentVaultNFTs.length && VaultRef.value.desiredVaultNFTs.length > 0))\n          {\n            await VaultRef.value.moveNFTsOnChain();\n            await gf.stakeWallet(new PublicKey(farm.value!));\n            hideModal();\n          }\n          else\n          {\n            if((VaultRef.value.desiredVaultNFTs.length - VaultRef.value.currentVaultNFTs.length) >= 0 && VaultRef.value.desiredVaultNFTs.length < 1)\n            {\n              setModalContent(\"There was a problem\", \"You must move at least 1 NFT to the staking wallet. To do so, click the NFT then click the right arrow then hit Start Staking!\" , \"modal-bad\", true, false);\n            }\n            else\n            {\n              await VaultRef.value.moveNFTsOnChain();                \n              hideModal();\n            }             \n          }\n          await fetchFarmer();        \n      }\n      catch(ex: unknown)\n      {      \n        hideModal();\n        let message = 'Unknown Error: Please try again. If the problem continues, please reach out to the site admin'\n        if (ex instanceof Error) {\n          message = ex.message;\n          if(message.includes(\"0x179a\"))\n          {\n           message = \"Minimum staking time not reached. \";\n          }\n          if(message.includes(\"0x1785\"))\n          {\n           message = \"Must have at least 1 NFT staked in the Vault. \";\n          }\n          if(message.includes(\"0x1784\"))\n          {\n           message = \"Vault is Locked. Please try again after the minimum staking peroid has completed \";\n          }\n           \n           showModal();\n           setModalContent(\"There was a problem\", message , \"modal-bad\", true, false);\n        }\n      }\n      selectedNFTs.value = [];\n    };\n\n    const endStaking = async (finalize:boolean) => {\n      try\n      {\n        showModal();\n        setModalContent(\"Submitting Transactions.\", \"Please Wait. Transaction in Progress\", \"modal-neutral\", false, true);\n\n          await gf.unstakeWallet(new PublicKey(farm.value!));\n          await fetchFarmer();\n\n        hideModal();\n      }\n      catch(ex: unknown)\n      {      \n        let message = 'Unknown Error: Please try again. If the problem continues, please reach out to the site admin'\n        if (ex instanceof Error) {\n          message = ex.message;\n          if(message.includes(\"0x179a\"))\n          {\n           message = \"Minimum staking time not reached. \";\n          }\n           showModal();\n           setModalContent(\"There was a problem\", message , \"modal-bad\", true, false);\n        }\n      }\n      selectedNFTs.value = [];\n\n      if(finalize)\n        endStaking(false);\n    };\n\n    \n\n    const claim = async () => {\n      await gf.claimWallet(\n        new PublicKey(farm.value!),\n        new PublicKey(farmAcc.value.rewardA.rewardMint!),\n        new PublicKey(farmAcc.value.rewardB.rewardMint!)\n      );\n      await fetchFarmer();\n    };\n\n    const handleRefreshFarmer = async () => {\n      await gf.refreshFarmerWallet(\n        new PublicKey(farm!),\n        new PublicKey(farmerIdentity!)\n          );\n    };\n\n    // --------------------------------------- adding extra gem\n    const selectedNFTs = ref<INFT[]>([]);\n\n    const handleNewSelectedNFT = (newSelectedNFTs: INFT[]) => {\n      widthdrawNFTs.value = (VaultRef.value.currentVaultNFTs.length - VaultRef.value.desiredVaultNFTs.length> 0 )\n      \n      console.debug(`selected ${newSelectedNFTs.length} NFTs`);\n      selectedNFTs.value = newSelectedNFTs; \n    };\n\n    const handleNewSelectedVaultNFT = (newSelectedNFTs: INFT[]) => {\n      widthdrawNFTs.value = (VaultRef.value.currentVaultNFTs.length - VaultRef.value.desiredVaultNFTs.length> 0 )\n      \n      console.debug(`selected ${newSelectedNFTs.length} NFTs`);\n      selectedNFTs.value = newSelectedNFTs;\n    };\n\n    const addSingleGem = async (\n      gemMint: PublicKey,\n      gemSource: PublicKey,\n      creator: PublicKey\n    ) => {\n      await gf.flashDepositWallet(\n        new PublicKey(farm.value!),\n        '1',\n        gemMint,\n        gemSource,\n        creator\n      );\n      await fetchFarmer();\n    };\n\n    const addGems = async () => {\n       try\n      {\n       showModal();\n        setModalContent(\"Submitting Transactions.\", \"Please Wait. Transaction in Progress\", \"modal-neutral\", false, true);\n      await Promise.all(\n        selectedNFTs.value.map((nft) => {\n          const creator = new PublicKey(\n            //todo currently simply taking the 1st creator\n            (nft.onchainMetadata as any).data.creators[0].address\n          );\n          console.debug('creator is', creator.toBase58());\n\n          addSingleGem(nft.mint, nft.pubkey!, creator);\n        })\n      );\n      console.debug(\n        `added another ${selectedNFTs.value.length} gems into staking vault`\n      );\n       await VaultRef.value.moveNFTsOnChain();\n       hideModal();\n      }\n      catch(ex: unknown)\n      {      \n        let message = 'Unknown Error: Please try again. If the problem continues, please reach out to the site admin'\n        if (ex instanceof Error) {\n          message = ex.message;\n          if(message.includes(\"0x179a\"))\n          {\n           message = \"Minimum staking time not reached. \";\n          }\n           showModal();\n           setModalContent(\"There was a problem\", message , \"modal-bad\", true, false);\n        }\n      }     \n    };\n    \n\n    return {\n      wallet,\n      farm,\n      farmAcc,\n      farmer: farmerIdentity,\n      farmerAcc,\n      farmerState,\n      availableA,\n      availableB,\n      initFarmer,\n      beginStaking,\n      endStaking,\n      claim,\n      handleRefreshFarmer,\n      selectedNFTs,\n      handleNewSelectedNFT,\n      handleNewSelectedVaultNFT,\n      addGems,\n      VaultRef,\n      modalActive, \n      toggleModal,\n      showModal,\n      hideModal,\n      setModalContent,\n      modalGood,\n      modalBad,\n      modalNeutral,\n      modalShowClosebutton,\n      modalShowWheel,\n      ModalMessage,\n      ModalHeader,\n      accruedReward,\n      paidOutReward,\n      fixedRate,\n      estFixedRate,\n      widthdrawNFTs,\n      totalAccounts,\n      totalStakedAccounts,\n      totalNFTsStaked,\n      totalNFTs,\n      farmerbeginStakingTs,\n      estRewards\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n"]}]}