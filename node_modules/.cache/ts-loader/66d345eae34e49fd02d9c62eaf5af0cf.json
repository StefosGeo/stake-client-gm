{"remainingRequest":"/home/george/projects/gem-farm-chimps-v2/node_modules/babel-loader/lib/index.js!/home/george/projects/gem-farm-chimps-v2/node_modules/ts-loader/index.js??ref--14-2!/home/george/projects/gem-farm-chimps-v2/src/composables/cluster.ts","dependencies":[{"path":"/home/george/projects/gem-farm-chimps-v2/src/composables/cluster.ts","mtime":1651784671825},{"path":"/home/george/projects/gem-farm-chimps-v2/babel.config.js","mtime":1651784671821},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/cache-loader/dist/cjs.js","mtime":1648666880328},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/babel-loader/lib/index.js","mtime":1648666880284},{"path":"/home/george/projects/gem-farm-chimps-v2/node_modules/ts-loader/index.js","mtime":1648666885109}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgcmVhZG9ubHksIHJlZiB9IGZyb20gJ3Z1ZSc7CmltcG9ydCB7IENvbm5lY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnOwpleHBvcnQgdmFyIENsdXN0ZXI7CgooZnVuY3Rpb24gKENsdXN0ZXIpIHsKICBDbHVzdGVyWyJNYWlubmV0Il0gPSAibWFpbm5ldCI7CiAgQ2x1c3RlclsiRGV2bmV0Il0gPSAiZGV2bmV0IjsKICBDbHVzdGVyWyJUZXN0bmV0Il0gPSAidGVzdG5ldCI7CiAgQ2x1c3RlclsiTG9jYWxuZXQiXSA9ICJsb2NhbG5ldCI7Cn0pKENsdXN0ZXIgfHwgKENsdXN0ZXIgPSB7fSkpOwoKZXhwb3J0IHZhciBCYW5rQWRkcjsKCihmdW5jdGlvbiAoQmFua0FkZHIpIHsKICBCYW5rQWRkclsiREVWIl0gPSAiMlMyRzNVUVFHNHdBQmI1UWdXcmVFUFJyZ1BiNVBTQUJKS0ZiNTFSVHpaZFkiOwogIEJhbmtBZGRyWyJMVVgiXSA9ICI5VlRGQkdFaHkzS0FWUjFXTlF4UGV1WnJLZXZWeW9heVVVR1VpeGFWb0xRMyI7IC8vTFVYID0gJzJTMkczVVFRRzR3QUJiNVFnV3JlRVBScmdQYjVQU0FCSktGYjUxUlR6WmRZJywKfSkoQmFua0FkZHIgfHwgKEJhbmtBZGRyID0ge30pKTsKCnZhciBjbHVzdGVyVVJMTWFwcGluZyA9IHsKICBtYWlubmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX01BSU5ORVRfVVJMIHx8ICdodHRwczovL2JsYWNrLXdhbmRlcmluZy1icmVlemUuc29sYW5hLW1haW5uZXQucXVpa25vZGUucHJvLzIzNmRiZGJiMTVjNzBiYTYwYzMwMGFjZDFiZGRkYjJhZjk2MDMyNDAvJywKICAvL21haW5uZXQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfREVWTkVUX1VSTCB8fCAnaHR0cHM6Ly9hcGkuZGV2bmV0LnNvbGFuYS5jb20nLAogIGRldm5ldDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9ERVZORVRfVVJMIHx8ICdodHRwczovL2FwaS5kZXZuZXQuc29sYW5hLmNvbScsCiAgLy9tYWlubmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX0RFVk5FVF9VUkwgfHwgJ2h0dHBzOi8vYXBpLmRldm5ldC5zb2xhbmEuY29tJywKICB0ZXN0bmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX1RFU1RORVRfVVJMIHx8ICdodHRwczovL2FwaS50ZXN0bmV0LnNvbGFuYS5jb20nLAogIGxvY2FsbmV0OiBwcm9jZXNzLmVudi5WVUVfQVBQX0xPQ0FMTkVUX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4ODk5Jwp9Owp2YXIgY2x1c3RlciA9IHJlZihDbHVzdGVyLk1haW5uZXQpOwp2YXIgYmFua0FkZHIgPSByZWYoQmFua0FkZHIuTFVYKTsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlQ2x1c3RlcigpIHsKICB2YXIgZ2V0Q2x1c3RlclVSTCA9IGZ1bmN0aW9uIGdldENsdXN0ZXJVUkwoKSB7CiAgICByZXR1cm4gY2x1c3RlclVSTE1hcHBpbmdbY2x1c3Rlci52YWx1ZV07CiAgfTsKCiAgdmFyIGdldENvbm5lY3Rpb24gPSBmdW5jdGlvbiBnZXRDb25uZWN0aW9uKGNvbW1pdHRtZW50KSB7CiAgICByZXR1cm4gbmV3IENvbm5lY3Rpb24oZ2V0Q2x1c3RlclVSTCgpLCBjb21taXR0bWVudCAhPT0gbnVsbCAmJiBjb21taXR0bWVudCAhPT0gdm9pZCAwID8gY29tbWl0dG1lbnQgOiAncHJvY2Vzc2VkJyk7CiAgfTsKCiAgdmFyIHNldENsdXN0ZXIgPSBmdW5jdGlvbiBzZXRDbHVzdGVyKG5ld0NsdXN0ZXIpIHsKICAgIGNsdXN0ZXIudmFsdWUgPSBuZXdDbHVzdGVyOyAvLyBjYXBwaW5nIGF0IDIwIGNoYXJzIGR1ZSB0byBzZWN1cml0eSAobm90IHRvIGV4cG9zZSB0aGUgdG9rZW4pCgogICAgY29uc29sZS5sb2coIkNsdXN0ZXIgdXBkYXRlZCwgIG5vdyAiLmNvbmNhdChuZXdDbHVzdGVyLCAiICgiKS5jb25jYXQoZ2V0Q2x1c3RlclVSTCgpLnN1YnN0cigwLCAyMCksICIpIikpOwogIH07CgogIHJldHVybiB7CiAgICBiYW5rQWRkcjogcmVhZG9ubHkoYmFua0FkZHIpLAogICAgY2x1c3RlcjogcmVhZG9ubHkoY2x1c3RlciksCiAgICBnZXRDbHVzdGVyVVJMOiBnZXRDbHVzdGVyVVJMLAogICAgZ2V0Q29ubmVjdGlvbjogZ2V0Q29ubmVjdGlvbiwKICAgIHNldENsdXN0ZXI6IHNldENsdXN0ZXIKICB9Owp9"},{"version":3,"sources":["/home/george/projects/gem-farm-chimps-v2/src/composables/cluster.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,EAAmB,GAAnB,QAA8B,KAA9B;AACA,SAAqB,UAArB,QAAuC,iBAAvC;AAEA,OAAA,IAAY,OAAZ;;AAAA,CAAA,UAAY,OAAZ,EAAmB;AACjB,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,OAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,OAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACD,CALD,EAAY,OAAO,KAAP,OAAO,GAAA,EAAA,CAAnB;;AAOA,OAAA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AACjB,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,8CAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,8CAAA,CAFiB,CAGjB;AACF,CAJD,EAAY,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAApB;;AAMA,IAAM,iBAAiB,GAAG;AACxB,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,CAAY,mBAAZ,IAAmC,sGADpB;AAExB;AACA,EAAA,MAAM,EAAE,OAAO,CAAC,GAAR,CAAY,kBAAZ,IAAkC,+BAHlB;AAIxB;AACA,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,CAAY,mBAAZ,IAAmC,gCALpB;AAMxB,EAAA,QAAQ,EAAE,OAAO,CAAC,GAAR,CAAY,oBAAZ,IAAoC;AANtB,CAA1B;AASA,IAAM,OAAO,GAAG,GAAG,CAAU,OAAO,CAAC,OAAlB,CAAnB;AACA,IAAM,QAAQ,GAAG,GAAG,CAAW,QAAQ,CAAC,GAApB,CAApB;AAEA,eAAc,SAAU,UAAV,GAAoB;AAChC,MAAM,aAAa,GAAG,SAAhB,aAAgB;AAAA,WAAc,iBAAiB,CAAC,OAAO,CAAC,KAAT,CAA/B;AAAA,GAAtB;;AAEA,MAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,WAAD;AAAA,WACpB,IAAI,UAAJ,CAAe,aAAa,EAA5B,EAAgC,WAAhC,aAAgC,WAAhC,cAAgC,WAAhC,GAA+C,WAA/C,CADoB;AAAA,GAAtB;;AAGA,MAAM,UAAU,GAAG,SAAb,UAAa,CAAC,UAAD,EAAwB;AACzC,IAAA,OAAO,CAAC,KAAR,GAAgB,UAAhB,CADyC,CAEzC;;AACA,IAAA,OAAO,CAAC,GAAR,iCAC2B,UAD3B,eAC0C,aAAa,GAAG,MAAhB,CAAuB,CAAvB,EAA0B,EAA1B,CAD1C;AAGD,GAND;;AAQA,SAAO;AACL,IAAA,QAAQ,EAAE,QAAQ,CAAC,QAAD,CADb;AAEL,IAAA,OAAO,EAAE,QAAQ,CAAC,OAAD,CAFZ;AAGL,IAAA,aAAa,EAAb,aAHK;AAIL,IAAA,aAAa,EAAb,aAJK;AAKL,IAAA,UAAU,EAAV;AALK,GAAP;AAOD","sourcesContent":["import { readonly, ref } from 'vue';\nimport { Commitment, Connection } from '@solana/web3.js';\n\nexport enum Cluster {\n  Mainnet = 'mainnet',\n  Devnet = 'devnet',\n  Testnet = 'testnet',\n  Localnet = 'localnet',\n}\n\nexport enum BankAddr {\n   DEV = '2S2G3UQQG4wABb5QgWreEPRrgPb5PSABJKFb51RTzZdY',\n   LUX = '9VTFBGEhy3KAVR1WNQxPeuZrKevVyoayUUGUixaVoLQ3',\n   //LUX = '2S2G3UQQG4wABb5QgWreEPRrgPb5PSABJKFb51RTzZdY',\n}\n\nconst clusterURLMapping = {\n  mainnet: process.env.VUE_APP_MAINNET_URL || 'https://black-wandering-breeze.solana-mainnet.quiknode.pro/236dbdbb15c70ba60c300acd1bdddb2af9603240/',\n  //mainnet: process.env.VUE_APP_DEVNET_URL || 'https://api.devnet.solana.com',\n  devnet: process.env.VUE_APP_DEVNET_URL || 'https://api.devnet.solana.com',\n  //mainnet: process.env.VUE_APP_DEVNET_URL || 'https://api.devnet.solana.com',\n  testnet: process.env.VUE_APP_TESTNET_URL || 'https://api.testnet.solana.com',\n  localnet: process.env.VUE_APP_LOCALNET_URL || 'http://localhost:8899',\n};\n\nconst cluster = ref<Cluster>(Cluster.Mainnet);\nconst bankAddr = ref<BankAddr>(BankAddr.LUX);\n\nexport default function useCluster() {\n  const getClusterURL = (): string => clusterURLMapping[cluster.value];\n\n  const getConnection = (committment?: Commitment): Connection =>\n    new Connection(getClusterURL(), committment ?? 'processed');\n\n  const setCluster = (newCluster: Cluster) => {\n    cluster.value = newCluster;\n    // capping at 20 chars due to security (not to expose the token)\n    console.log(\n      `Cluster updated,  now ${newCluster} (${getClusterURL().substr(0, 20)})`\n    );\n  };\n\n  return {\n    bankAddr: readonly(bankAddr),\n    cluster: readonly(cluster),\n    getClusterURL,\n    getConnection,\n    setCluster,\n  };\n}\n"],"sourceRoot":""}]}